---
services:
  backend:
    build:
      context: ../backend
      dockerfile: docker/Dockerfile
      target: production
    container_name: myapp_backend_prod
    restart: unless-stopped
    env_file:
      - ../backend/.env
    ports:
      - '5000:5000'
    environment:
      - REDIS_URL=redis://redis:6379
    networks:
      - myapp-network
    depends_on:
      - redis

  frontend:
    build:
      context: ../frontend
      dockerfile: docker/Dockerfile
      target: production
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
        NEXT_PUBLIC_DOCKER_BACKEND_API: ${NEXT_PUBLIC_DOCKER_BACKEND_API}
    container_name: myapp_frontend_prod
    restart: unless-stopped
    env_file:
      - ../frontend/.env
    environment:
      - NODE_ENV=production
    ports:
      - '3000:3000'
    depends_on:
      - backend
    networks:
      - myapp-network

  redis:
    image: redis:7-alpine
    container_name: myapp_redis_prod
    restart: unless-stopped
    ports:
      - '6379:6379'
    networks:
      - myapp-network

networks:
  myapp-network:
